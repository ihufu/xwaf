# WAF Nginx 配置
worker_processes auto;
error_log logs/error.log;
pid logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # 基础配置
    include mime.types;
    default_type application/octet-stream;
    charset utf-8;
    
    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 10m;
    
    # Lua 模块路径
    lua_package_path "$prefix/xwaf/core/lua/?.lua;$prefix/lualib/?.lua;;";
    lua_package_cpath "$prefix/lualib/?.so;;";
    
    # 共享内存字典
    lua_shared_dict waf_cache 10m;        # WAF本地缓存
    lua_shared_dict limit_req 10m;        # CC防护使用
    lua_shared_dict waf_status 1m;        # WAF状态存储
    lua_shared_dict waf_rules_cache 10m;  # 规则缓存
    lua_shared_dict waf_rules_version 1m; # 规则版本
    lua_shared_dict prometheus_metrics 10m;# Prometheus指标
    lua_shared_dict rules 10m;        # 规则缓存，10MB
    lua_shared_dict rule_version 1m;  # 规则版本缓存，1MB
    
    # Redis 连接池
    lua_socket_pool_size 100;
    lua_socket_keepalive_timeout 60s;
    
    # WAF 日志变量
    map $remote_addr $waf_log {
        default "-";
    }
    
    # WAF 配置
    init_by_lua_block {
        if not pcall(require("bootstrap").init) then
            ngx.log(ngx.ERR, "WAF initialization failed")
        end
        require "cache".init()
    }
    init_worker_by_lua_block {
        if not pcall(require("bootstrap").init_worker) then
            ngx.log(ngx.ERR, "WAF worker initialization failed")
        end
        
        -- 启动定时更新规则缓存的任务
        local rule_cache = require "rule_cache"
        
        local function update_rules_timer()
            rule_cache.check_rules_update()
        end
        
        local ok, err = ngx.timer.every(60, update_rules_timer)  -- 每60秒检查一次规则更新
        if not ok then
            ngx.log(ngx.ERR, "启动规则更新定时器失败：", err)
        end
        
        -- 启动规则同步定时器
        local cache = require "cache"
        local ok, err = ngx.timer.every(60, function()
            cache.sync_rules()
        end)
        if not ok then
            ngx.log(ngx.ERR, "failed to create rule sync timer: ", err)
        end
    }
    access_by_lua_file /usr/local/openresty/xwaf/core/lua/request.lua;
    
    # 监控指标导出接口
    server {
        listen 9145;  # Prometheus 默认抓取端口
        server_name localhost;
        
        location /metrics {
            content_by_lua_block {
                local metrics = require "metrics"
                ngx.say(metrics.export())
            }
        }
    }
    
    # 包含其他配置文件
    include conf.d/*.conf;
}